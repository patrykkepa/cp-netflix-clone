{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","witdh","playerVats","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fb36522.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react'\nimport axios from './axios';\nimport YouTube from 'react-youtube';\nimport movieTrailer from \"movie-trailer\";\n\nimport \"./Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row( { title, fetchUrl, isLargeRow } ) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    const opts = {\n        height: \"390\",\n        witdh: \"100%\",\n        playerVats: {\n            autoplay: 1,\n        }\n    }\n\n    const handleClick = (movie) => {\n        if (trailerUrl) {\n            setTrailerUrl(\"\")\n        } else {\n            movieTrailer(movie?.name || \"\")\n            .then(url => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get('v'));\n            }).catch((error) => console.log(error));\n        }\n    }\n\n    return (\n        <div className=\"row\">\n             <h2>{title}</h2>\n             <div className=\"row__posters\">\n                {movies.map(movie => (\n                    <img \n                        key={movie.id}\n                        onClick={() => handleClick(movie)}\n                        className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n                        alt={movie.name}/>\n                ))}\n             </div>\n\n             {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} /> }\n        </div>\n    )\n}\n\nexport default Row;\n ","const API_KEY = '029516b6191a4811d1e33ee19e9182e2';\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n\n}\n\nexport default requests;\n\n","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css'\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals)\n            setMovie(\n                request.data.results[\n                    Math.floor(Math.random() * request.data.results.length - 1)\n                ]\n            );\n            return request\n        }\n        fetchData()\n    }, []);\n\n    console.log(movie);\n\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n\n    return (\n        <header className=\"banner\"\n            style={{\n                backgroundSize: \"cover\",\n                backgroundImage: `url(\n                    \"http://image.tmdb.org/t/p/original/${movie.backdrop_path}\"\n                )`,\n                backgroundPosition: \"center center\",\n            }}\n        >\n            <div className=\"banner__contents\">\n                <h1 className=\"banner__title\">\n                    {movie.title || movie.name || movie.original_name}\n                </h1>\n\n                <div className=\"banner__buttons\">\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n\n                <h1 className=\"banner__description\">\n                    {truncate(movie.overview, 150)}\n                </h1>\n            </div>\n\n            <div className=\"banner--fadeBottom\" />\n        </header>\n    )\n}\n\nexport default Banner\n","import React, { useEffect, useState } from 'react'\n\nimport './Nav.css';\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if(window.scrollY > 100) {\n                handleShow(true)\n            } else handleShow(false)\n        });\n        return () => {\n            window.removeEventListener(\"scroll\", null);\n        };\n        \n    }, [])\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img \n                className=\"nav__logo\"\n                src=\"https://brand.netflix.com/static/assets/icons/netflix_logo.svg\"\n                alt=\"Netflix logo\"\n            />\n            <img \n                className=\"nav__avatar\"\n                src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n                alt=\"Netflix logo\"\n            />\n        </div>\n    )\n}\n\nexport default Nav\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    <Nav />\n    <Banner />\n     \n     <Row title=\"Netflix Original\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow />\n     <Row title=\"Trending Now\" fetchUrl={requests.fetchNetflixOriginals} />\n     <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n     <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n     <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n     <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n     <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n     <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n\n    </div>\n  );\n}\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}